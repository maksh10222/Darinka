from flask import Flask, render_template, redirect, url_for, request, flash
from flask_sqlalchemy import SQLAlchemy
from flask_bcrypt import Bcrypt
from flask_login import LoginManager, UserMixin, login_user, login_required, logout_user, current_user

app = Flask(__name__)
app.config['SECRET_KEY'] = 'supersecretkey'
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///database.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ç–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
db = SQLAlchemy(app)
bcrypt = Bcrypt(app)
login_manager = LoginManager(app)
login_manager.login_view = "login"

# üìå –ú–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä—É
class Product(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    price = db.Column(db.Float, nullable=False)
    description = db.Column(db.Text, nullable=False)

# üìå –ú–æ–¥–µ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
class User(db.Model, UserMixin):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    password = db.Column(db.String(100), nullable=False)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è Flask-Login
@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

# üìå –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞: —è–∫—â–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π ‚Üí –ø—Ä–æ—Ñ—ñ–ª—å, —è–∫—â–æ –Ω—ñ ‚Üí —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤
@app.route('/')
def home():
    if current_user.is_authenticated:
        return render_template('profile.html', user=current_user)
    products = Product.query.all()
    return render_template('index.html', products=products)

# üìå –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
@app.route('/add_product', methods=['GET', 'POST'])
@login_required
def add_product():
    if request.method == 'POST':
        name = request.form['name']
        price = request.form['price']
        description = request.form['description']

        product = Product(name=name, price=price, description=description)
        db.session.add(product)
        db.session.commit()
        flash('–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!', 'success')
        return redirect(url_for('home'))

    return render_template('add_product.html')

# üìå –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        hashed_password = bcrypt.generate_password_hash(password).decode('utf-8')
        user = User(username=username, password=hashed_password)
        db.session.add(user)
        db.session.commit()
        flash('–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞! –¢–µ–ø–µ—Ä —É–≤—ñ–π–¥—ñ—Ç—å —É —Å–∏—Å—Ç–µ–º—É.', 'success')
        return redirect(url_for('login'))
    return render_template('register.html')

# üìå –í—Ö—ñ–¥ —É —Å–∏—Å—Ç–µ–º—É

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user = User.query.filter_by(username=username).first()
        if user and bcrypt.check_password_hash(user.password, password):
            login_user(user)
            flash('–í—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π!', 'success')
            return redirect(url_for('home'))  # üî• –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü—ñ—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
        else:
            flash('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å!', 'danger')
    return render_template('login.html')

# üìå –í–∏—Ö—ñ–¥ –∑ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É
@app.route('/logout')
@login_required
def logout():
    logout_user()
    flash('–í–∏ –≤–∏–π—à–ª–∏ –∑ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É.', 'info')
    return redirect(url_for('home'))

# üìå –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == '__main__':
    with app.app_context():
        db.create_all()  # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö
    app.run(debug=True)
